#Change all the parameters as neccessary in this file#
#This is a sample file and all naming can be changed#
apiVersion: anywhere.eks.amazonaws.com/v1alpha1
kind: Cluster
metadata:
  name: rocky-aio
spec:
  clusterNetwork:
    cniConfig:
      cilium: {}
    pods:
      cidrBlocks:
      - 192.168.0.0/16
    services:
      cidrBlocks:
      - 10.96.0.0/12
  controlPlaneConfiguration:
    count: 1
    endpoint:
      host: "10.80.30.56" # This should be changed Refer to: https://anywhere.eks.amazonaws.com/docs/reference/clusterspec/baremetal/#controlplaneconfigurationendpointhost-required for more infromation on the parameter
    machineGroupRef:
      kind: TinkerbellMachineConfig
      name: rocky-aio-cp
  datacenterRef:
    kind: TinkerbellDatacenterConfig
    name: rocky-aio
  kubernetesVersion: "1.24"
  managementCluster:
    name: rocky-aio
---
apiVersion: anywhere.eks.amazonaws.com/v1alpha1
kind: TinkerbellDatacenterConfig
metadata:
  name: rocky-aio
spec:
  tinkerbellIP: "10.80.30.59" # This should be changed Refer to: https://anywhere.eks.amazonaws.com/docs/reference/clusterspec/baremetal/#tinkerbellip for more information on this parameter
  osImageURL: "http://10.80.30.26:8000/artifacts/rockylinux-8-kube-v1.24.7.gz" #This optional field is required. Refer to: https://anywhere.eks.amazonaws.com/docs/reference/clusterspec/baremetal/#osimageurl for more information on this parameter. A simple webserver can be hosted on the admin node - python3 -m http.server and the image can be hosted there. You can either build an image or use the pre-created image.

---
apiVersion: anywhere.eks.amazonaws.com/v1alpha1
kind: TinkerbellMachineConfig
metadata:
  name: rocky-aio-cp
spec:
  hardwareSelector:
    type: cp
  osFamily: ubuntu
  templateRef:
    kind: TinkerbellTemplateConfig
    name: rocky-aio
  users:
  - name: ec2-user

---
#This custom template is needed intil Rocky is supported officially#
#This image only supports Legacy-BIOS and not UEFI#
apiVersion: anywhere.eks.amazonaws.com/v1alpha1
kind: TinkerbellTemplateConfig
metadata:
  name: rocky-aio
spec:
  template:
    global_timeout: 6000
    id: ""
    name: rocky-aio
    tasks:
    - actions:
      - environment:
          COMPRESSED: "true"
          DEST_DISK: /dev/sda
          IMG_URL: http://10.80.30.26:8000/artifacts/rockylinux-8-kube-v1.24.7.gz #This should be the same as the value provided for osImageURL above.
        image: public.ecr.aws/eks-anywhere/tinkerbell/hub/image2disk:6c0f0d437bde2c836d90b000312c8b25fa1b65e1-eks-a-15
        name: stream-image
        timeout: 360
      - environment:
          CONTENTS: |
            network:
              version: 2
              renderer: networkd
              ethernets:
                  eno1:
                      dhcp4: true
          DEST_DISK: /dev/sda1
          DEST_PATH: /etc/netplan/config.yaml
          DIRMODE: "0755"
          FS_TYPE: ext4
          GID: "0"
          MODE: "0644"
          UID: "0"
        image: public.ecr.aws/eks-anywhere/tinkerbell/hub/writefile:6c0f0d437bde2c836d90b000312c8b25fa1b65e1-eks-a-15
        name: write-netplan
        timeout: 90
      - environment:
          CONTENTS: |
            datasource:
              Ec2:
                metadata_urls: ["http://10.80.30.26:50061", "http://10.80.30.59:50061"]
                strict_id: false
            system_info:
              default_user:
                name: ec2-user
                groups: [wheel, adm]
                sudo: ["ALL=(ALL) NOPASSWD:ALL"]
                shell: /bin/bash
            manage_etc_hosts: localhost
            warnings:
              dsid_missing_source: off
          DEST_DISK: /dev/sda1
          DEST_PATH: /etc/cloud/cloud.cfg.d/10_tinkerbell.cfg
          DIRMODE: "0700"
          FS_TYPE: ext4
          GID: "0"
          MODE: "0600"
          UID: "0"
        image: public.ecr.aws/eks-anywhere/tinkerbell/hub/writefile:6c0f0d437bde2c836d90b000312c8b25fa1b65e1-eks-a-15
        name: add-tink-cloud-init-config
        timeout: 90
      - environment:
          CONTENTS: |
            network:
              config: disabled
          DEST_DISK: /dev/sda1
          DEST_PATH: /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg
          DIRMODE: "0700"
          FS_TYPE: ext4
          GID: "0"
          MODE: "0600"
          UID: "0"
        image: public.ecr.aws/eks-anywhere/tinkerbell/hub/writefile:6c0f0d437bde2c836d90b000312c8b25fa1b65e1-eks-a-15
        name: disable-cloud-init-network-capabilities
        timeout: 90
      - environment:
          CONTENTS: |
            datasource: Ec2
          DEST_DISK: /dev/sda1
          DEST_PATH: /etc/cloud/ds-identify.cfg
          DIRMODE: "0700"
          FS_TYPE: ext4
          GID: "0"
          MODE: "0600"
          UID: "0"
        image: public.ecr.aws/eks-anywhere/tinkerbell/hub/writefile:6c0f0d437bde2c836d90b000312c8b25fa1b65e1-eks-a-15
        name: add-tink-cloud-init-ds-config
        timeout: 90
      - image: public.ecr.aws/l0g8r8j6/tinkerbell/hub/reboot-action:latest
        name: reboot
        timeout: 90
        volumes:
          - /worker:/worker
      name: rocky-aio
      volumes:
      - /dev:/dev
      - /dev/console:/dev/console
      - /lib/firmware:/lib/firmware:ro
      worker: '{{.device_1}}'
    version: "0.1"
